name: Build the game for Windows & MacOsX ðŸŽ®

on:
  push:
    branches:
      - release
  release:
    types:
        - published
  workflow_dispatch:
    inputs:
        workflow_mode:
            description: '[release] [StandaloneWindows64, StandaloneOSX]'
            required: false
            default: ''

permissions:
  actions: write
  attestations: write
  checks: write
  contents: write
  deployments: write
  discussions: write
  id-token: write
  issues: write
  packages: write
  pages: write
  pull-requests: write
  repository-projects: write
  security-events: write
  statuses: write

jobs:
  build:

    name: Build for ${{ matrix.targetPlatform }} 
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneOSX
          # - StandaloneWindows64

    outputs:
        buildVersion: ${{ steps.buildnumber.outputs.build_number }}
    
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Unity files
        uses: actions/cache@v4
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-

      - name: Get a random id for the build
        id: buildnumber
        uses: einaregilsson/build-number@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
            

      - name: Build Unity Project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with: 
          targetPlatform: ${{ matrix.targetPlatform }}
          unityVersion: 2022.3.42f1
          allowDirtyBuild: true

      - name: Create artifact in the actions tab
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.targetPlatform }}-${{ steps.buildnumber.outputs.build_number }}
          path: build/${{ matrix.targetPlatform }}

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.buildnumber.outputs.build_number }}-${{ matrix.targetPlatform }}
          release_name: Release ${{ github.ref }} ${{ matrix.targetPlatform }} ${{ steps.buildnumber.outputs.build_number }}
          draft: false
          prerelease: false

      - name: Make a ZIP archive of the build folder
        uses: montudor/action-zip@v1
        with:
            args: zip -qq -r build/build-${{ matrix.targetPlatform }}-${{ steps.buildnumber.outputs.build_number }}.zip build/${{ matrix.targetPlatform }}
        
      - name: Debug build folder content
        run: ls -R build

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: build/build-${{ matrix.targetPlatform }}-${{ steps.buildnumber.outputs.build_number }}.zip
            asset_name: build-${{ matrix.targetPlatform }}-${{ steps.buildnumber.outputs.build_number }}
            asset_content_type: application/zip